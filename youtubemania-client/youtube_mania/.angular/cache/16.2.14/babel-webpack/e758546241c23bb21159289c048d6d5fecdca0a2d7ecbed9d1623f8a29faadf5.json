{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DownloadService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://youtubemania.vercel.app/video/download';\n  }\n  downloadVideo(url, format) {\n    return this.http.post(`${this.apiUrl}`, {\n      url,\n      format\n    }, {\n      responseType: 'blob'\n    });\n  }\n  static #_ = this.ɵfac = function DownloadService_Factory(t) {\n    return new (t || DownloadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DownloadService,\n    factory: DownloadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DownloadService","constructor","http","apiUrl","downloadVideo","url","format","post","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\YoutubeMania\\youtubemania-client\\youtube_mania\\src\\app\\services\\download.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n  private apiUrl = 'https://youtubemania.vercel.app/video/download';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  downloadVideo(url: string, format: string): Observable<Blob> {\r\n    return this.http.post(`${this.apiUrl}`, { url, format }, { responseType: 'blob' });\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gDAAgD;EAEzB;EAExCC,aAAaA,CAACC,GAAW,EAAEC,MAAc;IACvC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,EAAE,EAAE;MAAEE,GAAG;MAAEC;IAAM,CAAE,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACpF;EAAC,QAAAC,CAAA,G;qBAPUT,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfd,eAAe;IAAAe,OAAA,EAAff,eAAe,CAAAgB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
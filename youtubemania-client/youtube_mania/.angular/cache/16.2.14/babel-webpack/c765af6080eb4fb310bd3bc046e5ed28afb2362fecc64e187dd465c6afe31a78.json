{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DownloadService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/video/download'; // Backend API URL\n  }\n\n  downloadVideo(url) {\n    return this.http.post(this.apiUrl, {\n      url: url\n    }, {\n      responseType: 'blob'\n    });\n  }\n  static #_ = this.ɵfac = function DownloadService_Factory(t) {\n    return new (t || DownloadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DownloadService,\n    factory: DownloadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DownloadService","constructor","http","apiUrl","downloadVideo","url","post","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\YoutubeMania\\youtubemania-client\\youtube_mania\\src\\app\\services\\download.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DownloadService {\n  private apiUrl = 'http://localhost:3000/video/download'; // Backend API URL\n\n  constructor(private http: HttpClient) { }\n\n  downloadVideo(url: string): Observable<any> {\n    return this.http.post(this.apiUrl, { url: url }, { responseType: 'blob' });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sCAAsC,CAAC,CAAC;EAEjB;;EAExCC,aAAaA,CAACC,GAAW;IACvB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,MAAM,EAAE;MAAEE,GAAG,EAAEA;IAAG,CAAE,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAC5E;EAAC,QAAAC,CAAA,G;qBAPUR,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfb,eAAe;IAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}